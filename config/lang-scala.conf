[general]
name = Scala
version_switch = -version
execution_profile = VMProfile
binary = scalac
vm_command = lambda source: ["scala", "Main"]
filename = source.scala
compiler_apparmor_profile = straitjacket/compiler/scala
vm_apparmor_profile = straitjacket/compiled/scala

[test-simple]
source = object Main {
           def main(args: Array[String]) {
             println("Hello from Scala")
           }
         }
stdout = \AHello from Scala\n\Z
stderr = \A\Z
exitstatus = 0
error =

[test-apparmor]
source = import scala.io._
         object Main {
          def main(args: Array[String]) {
            val s = Source.fromFile("/etc/hosts")
            s.getLines.foreach( (line) => {
              println(line.trim)
            })
          }
         }
stdout = \A\Z
stderr = \Ajava.io.FileNotFoundException: /etc/hosts \(Permission denied\)
exitstatus = 0
error = 

[test-rlimit]
source = object Main {
          def main(args: Array[String]) {
            val data = new Array[String](1073741824)
            data
          }
         }
stdout = \A\Z
stderr = \Ajava.lang.OutOfMemoryError: Java heap space\n
exitstatus = 0
error = 

[test-application-trait]
source = object Main extends Application {
          println("hello from scala")
         }
stdout = \Ahello from scala\n\Z
stderr = \A\Z
exitstatus = 0
error =
